@page "/character-creation/sheet"
@using LoDCompanion.Models.Character
@inject LoDCompanion.Services.State.PartyManagerService PartyManager
@rendermode InteractiveServer

<h3>Character Sheet</h3>

@if (hero != null)
{
    <div class="card">
        <div class="card-header">
            <h3>@hero.Name</h3>
            <h5>@hero.SpeciesName @hero.ProfessionName - Level @hero.Level</h5>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-4">
                    <strong>HP:</strong> @hero.CurrentHP / @hero.MaxHP <br />
                    @{
                        var hpPercentage = (hero.CurrentHP * 100) / hero.MaxHP;
                        <div class="progress mt-1" role="progressbar" aria-label="Mana bar" aria-valuenow="@hero.CurrentHP"
                        aria-valuemin="0" aria-valuemax="@hero.MaxHP">
                            <div class="progress-bar bg-info" style="width: @hpPercentage%"></div>
                        </div>
                    }
                    @if (hero.MaxMana.HasValue && hero.MaxMana > 0)
                    {
                        var manaDisplayText = $"{hero.CurrentMana.GetValueOrDefault(0)} / {hero.MaxMana.Value}";
                        <strong>Mana:</strong> 
                        @manaDisplayText
                        < br />
                        var manaPercentage = (hero.CurrentMana.GetValueOrDefault(0) * 100) / hero.MaxMana.Value;
                        <div class="progress mt-1" role="progressbar" aria-label="Mana bar" aria-valuenow="@hero.CurrentMana"
                        aria-valuemin="0" aria-valuemax="@hero.MaxMana.Value">
                            <div class="progress-bar bg-info" style="width: @manaPercentage%"></div>
                        </div>
                    }
                    <strong>Energy:</strong> @hero.CurrentEnergy / @hero.MaxEnergy <br />
                    @{
                        var energyPercentage = (hero.CurrentEnergy * 100) / hero.MaxEnergy;
                        <div class="progress mt-1" role="progressbar" aria-label="Mana bar" aria-valuenow="@hero.CurrentEnergy"
                        aria-valuemin="0" aria-valuemax="@hero.MaxEnergy">
                            <div class="progress-bar bg-info" style="width: @energyPercentage%"></div>
                        </div>
                    }
                    <strong>Sanity:</strong> @hero.CurrentSanity / @hero.MaxSanity <br />
                    @{
                        var sanityPercentage = (hero.CurrentSanity * 100) / hero.MaxSanity;
                        <div class="progress mt-1" role="progressbar" aria-label="Mana bar" aria-valuenow="@hero.CurrentSanity"
                        aria-valuemin="0" aria-valuemax="@hero.MaxSanity">
                            <div class="progress-bar bg-info" style="width: @sanityPercentage%"></div>
                        </div>
                    }
                </div>
                <div class="col-md-4">
                    <strong>Strength:</strong> @hero.Strength <br />
                    <strong>Constitution:</strong> @hero.Constitution <br />
                    <strong>Dexterity:</strong> @hero.Dexterity <br />
                    <strong>Wisdom:</strong> @hero.Wisdom <br />
                    <strong>Resolve:</strong> @hero.Resolve <br />
                </div>
                <div class="col-md-4">
                    <strong>Combat Skill:</strong> @hero.CombatSkill <br />
                    <strong>Ranged Skill:</strong> @hero.RangedSkill <br />
                    <strong>Dodge:</strong> @hero.Dodge <br />
                    <strong>Perception:</strong> @hero.PerceptionSkill <br />
                </div>
            </div>
            <hr />
            <h5>Talents</h5>
            <ul>
                @foreach (var talent in hero.Talents)
                {
                    <li><strong>@talent.Name:</strong> @talent.Description</li>
                }
            </ul>

            <h5>Equipment</h5>
            <ul>
                @foreach (var item in hero.Backpack)
                {
                    <li>@item.Name</li>
                }
            </ul>
        </div>
    </div>
}
else
{
    <p>No character has been created yet. Please start from the <a href="/character-creation">character creator</a>.</p>
}


@code {

    private Hero? hero;

    protected override void OnInitialized()
    {
        if (hero != null && !string.IsNullOrEmpty(hero.Name))
        {
            // Find the hero in the party list by the name passed in the URL
            hero = PartyManager.GetParty().FirstOrDefault(h => h.Name.Equals(Uri.UnescapeDataString(hero.Name), StringComparison.OrdinalIgnoreCase));
        }
    }
}