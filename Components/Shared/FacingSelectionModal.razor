@using LoDCompanion.Models.Character
@using LoDCompanion.Services.Combat

@inject FacingDirectionService FacingService

<style>


    .modal-backdrop {
        /* Make the backdrop cover the entire screen */
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        /* Semi-transparent black background */
        background-color: rgba(0, 0, 0, 0.6);
        /* Use flexbox to center the modal content */
        display: flex;
        justify-content: center;
        align-items: center;
        /* Ensure it's on top of all other content */
        z-index: 1050;
    }

    .modal-content {
        /* Style the actual pop-up window */
        background-color: #332d25; /* A dark, thematic background */
        color: #e6d8c0;
        padding: 2rem;
        border-radius: 8px;
        border: 3px solid #5a4d3a;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
        /* Set a max-width to keep it from getting too large */
        width: 90%;
        max-width: 500px;
        /* Animation for appearing */
        animation: fadeIn 0.3s ease-out;
    }

        .modal-content h3 {
            margin-top: 0;
            text-align: center;
        }

    .direction-buttons {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 10px;
        margin-top: 1.5rem;
    }

        .direction-buttons button {
            padding: 12px;
            font-size: 1em;
            font-weight: bold;
            color: white;
            background-color: #7a6a53;
            border: 2px solid #5a4d3a;
            border-radius: 5px;
            cursor: pointer;
        }

            .direction-buttons button:hover {
                background-color: #9c8a70;
            }

</style>
<div class="modal-backdrop">
    <div class="modal-content">
        <h3>@FacingService.CurrentRequest?.Prompt</h3>
        <div class="direction-buttons">
            <button @onclick="() => SelectDirection(FacingDirection.North)">North</button>
            <button @onclick="() => SelectDirection(FacingDirection.East)">East</button>
            <button @onclick="() => SelectDirection(FacingDirection.South)">South</button>
            <button @onclick="() => SelectDirection(FacingDirection.West)">West</button>
        </div>
    </div>
</div>

@code {
    private void SelectDirection(FacingDirection direction)
    {
        FacingService.CompleteSelection(direction);
    }
}