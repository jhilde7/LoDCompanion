
@using LoDCompanion.Code.BackEnd.Services.Utilities

@inject UserRequestService DiceRollService

<style>
    .modal-backdrop {
        /* Make the backdrop cover the entire screen */
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        /* Semi-transparent black background */
        background-color: rgba(0, 0, 0, 0.6);
        /* Use flexbox to center the modal content */
        display: flex;
        justify-content: center;
        align-items: center;
        /* Ensure it's on top of all other content */
        z-index: 1060;
    }

    .modal-content {
        /* Style the actual pop-up window */
        background-color: #332d25;
        /* A dark, thematic background */
        color: #e6d8c0;
        padding: 2rem;
        border-radius: 8px;
        border: 3px solid #5a4d3a;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
        /* Set a max-width to keep it from getting too large */
        width: 90%;
        max-width: 500px;
        /* Animation for appearing */
        animation: fadeIn 0.3s ease-out;
    }

    .modal-content h3 {
        margin-top: 0;
        text-align: center;
    }

    .manual-entry,
    .auto-roll {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 1rem;
    }

    .auto-roll p {
        margin: 0 1rem;
    }
</style>

@if (DiceRollService.CurrentDiceRequest != null)
{
    <div class="modal-backdrop">
        <div class="modal-content">
            <h3>@DiceRollService.CurrentDiceRequest.Prompt</h3>
            <p>Dice: @DiceRollService.CurrentDiceRequest.DiceNotation</p>

            <div class="manual-entry">
                <label for="manualRoll">Enter Roll Result:</label>
                <input id="manualRoll" type="number" @bind="_manualRollValue" @bind:event="oninput" />
                <button class="btn-submit" @onclick="SubmitManualRoll" disabled="@(!_isManualRollValid)">Submit</button>
            </div>

            <div class="auto-roll">
                <p>Or</p>
                <button class="btn-auto-roll" @onclick="SubmitAutoRoll">Roll Automatically</button>
                @if (DiceRollService.CurrentDiceRequest?.IsCancellable == true)
                {
                    <button class="btn-auto-roll" @onclick="CancelRoll">Cancel</button>
                }
            </div>
        </div>
    </div>
}

@code {
    private int _manualRollValue;
    private bool _isManualRollValid => _manualRollValue >= 1;

    protected override void OnInitialized()
    {
        DiceRollService.OnRollRequested += OnDiceRollStateChanged;
    }

    public void Dispose()
    {
        DiceRollService.OnRollRequested -= OnDiceRollStateChanged;
    }

    private async void OnDiceRollStateChanged()
    {
        await InvokeAsync(StateHasChanged);
    }

    private void SubmitManualRoll()
    {
        var result = new DiceRollResult { Roll = _manualRollValue };
        DiceRollService.CompleteRoll(result);
        _manualRollValue = 0; // Reset for next time
    }

    private void SubmitAutoRoll()
    {
        var result = new DiceRollResult { Roll = RandomHelper.RollDice(DiceRollService.CurrentDiceRequest?.DiceNotation ?? "1d100")};
        DiceRollService.CompleteRoll(result);
    }

    private void CancelRoll()
    {
        DiceRollService.CancelRoll();
    }
}